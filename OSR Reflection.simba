(*
  OSR Reflection Library
  Maintained by: tls
*)

//Global Constants
const
{$IFDEF OSRREF_DEBUG}
  OSRREF_DEBUG = True;
{$ELSE}
  OSRREF_DEBUG = False;
{$ENDIF}

//Wrapper Includes
{$include_once data\globals.simba}
{$include_once wrappers\input.simba}
{$include_once wrappers\nodes.simba}
{$include_once wrappers\rsclient.simba}
{$include_once wrappers\rsview.simba}

//API Includes
{$include_once api\widgets.simba}
{$include_once api\npcs.simba}
{$include_once api\players.simba}
{$include_once api\client.simba}
{$include_once api\grounditems.simba}
{$include_once api\walking.simba}
{$include_once api\banking.simba}

//Global Destructor
procedure FreeOSRReflection;
var
  leaked: Integer;
begin
  if (reflectLib.objectManager.getSize > 0) then
  begin
    leaked := reflectLib.freeAllObjects(true);
    if (leaked > 0) then
      writeln('Freed ' + tostr(leaked) +
        ' object reference(s) from SMART, Script has memory leak!');
  end;
  writeln('Successfully freed OSR Reflection');
end;

//Global Setup
procedure SetupOSRReflection(smartTarget: PtrUInt);
begin
  writeln('Setting up OSR Reflection');
  reflectLib.create(smartTarget);
  AddOnTerminate('FreeOSRReflection');
end;
